# https://docs.microsoft.com/en-us/vsts/pipelines/yaml-schema?view=vsts

trigger:
  batch: true
  branches:
    include:
      - 'master'

pr:
  autoCancel: true
  branches:
    include:
      - master

pool:
  vmImage: 'windows-latest'

variables:
  # Set the DOTNET_SKIP_FIRST_TIME_EXPERIENCE environment variable to stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  BuildConfiguration: 'Release'
  Project: '$(Build.SourcesDirectory)/src/CZ.AspNetCore.EasyAuthAuthentication/CZ.AspNetCore.EasyAuthAuthentication.csproj'
  ProjectFolder: '$(Build.SourcesDirectory)/src/CZ.AspNetCore.EasyAuthAuthentication'
  GitVersion: '5.1.3'

name: $(Year:yy)$(DayOfYear)$(Rev:rr)

stages:
  - stage: 'Build'
    jobs:
      - job: 'Build'
        steps:
          - task: UseDotNet@2
            displayName: 'Install dotnet core SDK'
            inputs:
              packageType: 'sdk'
              # because use global json currently takes always the defined version
              # and ignores the `rollForward` flag we fall back to this:
              version: 3.1.x

          - task: DotNetCoreCLI@2
            displayName: 'Install GitVersion: $(GitVersion)'
            inputs:
              command: custom
              custom: 'tool'
              arguments: 'install GitVersion.Tool --version $(GitVersion)  --tool-path ./pipelines/tools/gitversion'

          - task: PowerShell@2
            displayName: 'Run GitVersion'
            inputs:
              targetType: 'filePath'
              filePath: 'pipelines/tools/Run-GitVersion.ps1'
              arguments: '-Verbose'
              workingDirectory: '$(ProjectFolder)'

          - task: DotNetCoreCLI@2
            displayName: 'Restore'
            inputs:
              command: 'restore'
              projects: '$(Project)'

          - task: DotNetCoreCLI@2
            displayName: 'Build'
            inputs:
              command: 'build'
              projects: '$(Project)'
              arguments: '--configuration $(buildConfiguration) --no-restore'

          - task: DotNetCoreCLI@2
            displayName: 'Test'
            inputs:
              command: 'test'
              projects: 'test/**/*.csproj'
              arguments: '--configuration $(buildConfiguration)'
              testRunTitle: '$(Build.BuildNumber)'

          - template: templates/NuGet.Pack.yaml
            parameters:
              name: 'PR'
              condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
              buildProperties: 'VersionPrefix=$(GitVersion_MajorMinorPatch);VersionSuffix=pre-$(Build.BuildNumber);PackageId=PR-$(System.PullRequest.pullRequestNumber)-CZ.AspNetCore.EasyAuthAuthentication'

          - template: templates/NuGet.Pack.yaml
            parameters:
              name: 'Internal'
              condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
              buildProperties: 'VersionPrefix=$(GitVersion_MajorMinorPatch);VersionSuffix=pre-$(Build.BuildNumber)'

          - template: templates/NuGet.Pack.yaml
            parameters:
              name: 'Release'
              condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
              buildProperties: 'VersionPrefix=$(GitVersion_MajorMinorPatch);VersionSuffix='

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'PullRequest')))
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: NuGet
              parallel: true
